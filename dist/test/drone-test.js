'use strict';Object.defineProperty(exports,'__esModule',{value:true});const drone_events_1=require('../app/pubsub/scaledrone-service/drone-events');const channel_config_1=require('../app/pubsub/scaledrone-service/channel-config');const channel_config_2=require('../app/pubsub/scaledrone-service/channel-config');const scaledrone_client_1=require('../app/pubsub/scaledrone-service/scaledrone-client');let channelName=channel_config_1.ChannelNames.BidsTest;console.log('Bids Channel Name ::',channelName);let bidsDrone=new scaledrone_client_1.ScaledroneClient(channelName);let channel=this.bidsDrone.subscribe(channel_config_2.MessagePipes.NewBid);this.channel.on(drone_events_1.DroneEvents.Open,error=>{if(error){console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Service Error ::',error);}else{console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Service Started!');}});channel.on(drone_events_1.DroneEvents.Error,err=>{console.log('ERROR ::',err);});channel.on(drone_events_1.DroneEvents.Data,data=>{console.log('DATA ::',data);});channel.on(drone_events_1.DroneEvents.Close,()=>{console.log('** CLOSE');});channel.on(drone_events_1.DroneEvents.Reconnect,data=>{console.log('** RECONNECT');});