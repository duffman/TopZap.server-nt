'use strict';var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==='object'&&typeof Reflect.decorate==='function')r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if(typeof Reflect==='object'&&typeof Reflect.metadata==='function')return Reflect.metadata(k,v);};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,'__esModule',{value:true});require('reflect-metadata');const inversify_1=require('inversify');const basket_service_1=require('../services/basket.service');const zap_message_types_1=require('../zap-ts-models/messages/zap-message-types');const pubsub_message_1=require('../../lib/topzap.pubsub-lib.git/pubsub-message');const pubsub_channels_1=require('../../lib/topzap.pubsub-lib.git/pubsub-channels');const cli_logger_1=require('../cli/cli.logger');const kernel_interfaces_1=require('../../kernel-interfaces');const pubsub_core_1=require('../../lib/topzap.pubsub-lib.git/pubsub-core');let BidsPubsub=class BidsPubsub{constructor(basketService,pubsubCore){this.basketService=basketService;this.pubsubCore=pubsubCore;this.pubsubCore.subscribe([pubsub_channels_1.Channels.NewBidChannel]);this.basketService=new basket_service_1.BasketService();this.pubsubCore.onNewBidMessage(msg=>{this.onNewVendorBid(msg);});}getBid(code,sessionId){let message=new pubsub_message_1.PubsubMessage(zap_message_types_1.ZapMessageType.GetOffers,{code:code},sessionId);return this.pubsubCore.emitGetBidRequest(code,sessionId);}onNewVendorBid(message){let messageData=message.data;let vendorBid=messageData.data;console.log('onNewVendorBid ::',message);console.log('onNewVendorBid :: data ::',message.data);let newBidData={type:'newBid',code:vendorBid.code,accepted:vendorBid.accepted,vendorId:vendorBid.vendorId};this.pubsubCore.publish(message.sessId,newBidData).then(newBidData=>{cli_logger_1.Logger.logError('newBidData :: '+message.sessId+' ::',newBidData);}).catch(err=>{cli_logger_1.Logger.logError('newBidData :: err ::'+message.sessId+' ::',err);});this.basketService.addToBasket(message.sessId,vendorBid).then(res=>{this.pubsubCore.emitGetBestBasketMessage(message.sessId).then(res=>{cli_logger_1.Logger.logYellow('\xA4\xA4\xA4\xA4\xA4\xA4 emitGetBestBasketMessage :: sessId ::',message.sessId);}).catch(err=>{cli_logger_1.Logger.logError('\xA4\xA4\xA4\xA4\xA4\xA4 emitGetBestBasketMessage :: err ::',err);});}).catch(err=>{console.log('onNewVendorBid :: error ::',err);});}};BidsPubsub=__decorate([inversify_1.injectable(),__param(0,inversify_1.inject(kernel_interfaces_1.KInt.IBasketService)),__param(1,inversify_1.inject(kernel_interfaces_1.KInt.IPubsubCore)),__metadata('design:paramtypes',[basket_service_1.BasketService,pubsub_core_1.PubsubCore])],BidsPubsub);exports.BidsPubsub=BidsPubsub;