'use strict';var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==='object'&&typeof Reflect.decorate==='function')r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if(typeof Reflect==='object'&&typeof Reflect.metadata==='function')return Reflect.metadata(k,v);};var __param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};};Object.defineProperty(exports,'__esModule',{value:true});require('reflect-metadata');const inversify_1=require('inversify');const webapp_1=require('./webapp');const drone_workers_pipe_1=require('./pubsub/zapdrone-service/pipes/drone-workers-pipe');const cli_logger_1=require('./cli/cli.logger');let ServerService=class ServerService{constructor(webApp,droneWorkersPipe){this.webApp=webApp;this.droneWorkersPipe=droneWorkersPipe;console.log('ServerService !!!');webApp.initApp();droneWorkersPipe.startService().then(res=>{cli_logger_1.Logger.logPurple('droneWorkersPipe.startService ::',res);}).catch(err=>{cli_logger_1.Logger.logError('droneWorkersPipe.startService :: err ::',err);});}};ServerService=__decorate([inversify_1.injectable(),__param(0,inversify_1.inject('IWebApp')),__param(1,inversify_1.inject('IDroneWorkersPipe')),__metadata('design:paramtypes',[webapp_1.WebApp,drone_workers_pipe_1.DroneWorkersPipe])],ServerService);exports.ServerService=ServerService;