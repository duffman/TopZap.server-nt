'use strict';Object.defineProperty(exports,'__esModule',{value:true});const cli_logger_1=require('../../cli/cli.logger');const session_basket_1=require('../../zap-ts-models/session-basket');const channel_message_1=require('../../channels.git/channel-message');const channel_config_1=require('../../channels.git/channel-config');const channel_config_2=require('../../channels.git/channel-config');const zap_message_types_1=require('../../zap-ts-models/messages/zap-message-types');const channel_1=require('../../channels.git/channel');const controller_utils_1=require('../controller.utils');const Scaledrone=require('scaledrone-node');const basket_service_1=require('../../services/basket.service');const zap_offer_model_1=require('../../zap-ts-models/zap-offer.model');const channel_events_1=require('../../channels.git/channel-events');const analytics_db_1=require('../../../database/analytics-db');const api_routes_1=require('../api-routes');class BidsApiController{constructor(){this.analyticsDb=new analytics_db_1.AnalyticsDb();console.log('BidsApiController --- XXX');this.basketService=new basket_service_1.BasketService();this.drone=new Scaledrone('0RgtaE9UstNGjTmu');this.channel=this.drone.subscribe(channel_config_1.MessagePipes.GetBid);this.channel.on(channel_events_1.ChannelEvents.ChannelData,data=>{console.log('XXX DATA ::',data);});this.channel=new channel_1.Channel(channel_config_2.ChannelNames.Bids,channel_config_1.MessagePipes.NewBid);this.channel.onChannelData(data=>{let sessId=data.sessId;console.log('NEW BID RECEIVED ::',data);if(data.type===zap_message_types_1.ZapMessageType.VendorOffer){this.onNewVendorBid(data);}else{this.basketService.getReviewData(sessId).then(data=>{console.log('DATA ::',data);});}});}onNewVendorBid(message){let vendorBid=message.data;this.basketService.addToBasket(message.sessId,message.data);console.log('onNewVendorBid ::',message);}apiGetBasket(req,resp){}apiAddBasketItem(req,resp){let data=req.body;let code=data.code;console.log('BIDS :: CODE ::',code);let res=this.doGetBids(code,req.sessionID);controller_utils_1.ApiControllerUtils.jsonSuccess(resp,res);}apiDeleteBasketItem(req,resp){}apiReviewBasket(req,resp){let data=req.body;console.log('BASKET :: SESSION ID ::',req.sessionID);}initRoutes(routes){routes.get(api_routes_1.ApiRoutes.Basket.GET_BASKET,this.apiGetBasket.bind(this));routes.post(api_routes_1.ApiRoutes.Basket.POST_BASKET_ADD,this.apiAddBasketItem.bind(this));routes.post(api_routes_1.ApiRoutes.Basket.POST_BASKET_DELETE,this.apiDeleteBasketItem.bind(this));routes.post(api_routes_1.ApiRoutes.Basket.POST_BASKET_REVIEW,this.apiReviewBasket.bind(this));}doGetBids(code,sessId){let result=true;try{cli_logger_1.Logger.log(`BasketChannelController :: doGetOffers`);let messData=new channel_message_1.ChannelMessage(zap_message_types_1.ZapMessageType.GetOffers,{code:code},sessId);this.channel.emitMessage(messData,channel_config_1.MessagePipes.GetBid);}catch(err){cli_logger_1.Logger.logError('doGetBids :: ERROR ::',err);result=false;}return result;}getSessionBasket(sessId){let sessBasket=new session_basket_1.SessionBasket();return sessBasket;}}exports.BidsApiController=BidsApiController;let test=new BidsApiController();let jsonData=`{ "success": "true",
     "code": "0887195000424",
    "vendorId": 13,
     "accepted": true,
     "title": ,
     offer: '0.13',
     thumbImg: null,
     rawData: null };`;let vendorOffer=new zap_offer_model_1.VendorOfferData('0887195000424',13,'845 Heroes: 98 Heroes Edition - Nintendo Switch','0.13');let cData=new channel_message_1.ChannelMessage(zap_message_types_1.ZapMessageType.VendorOffer,vendorOffer,'KALLEKULA');test.onNewVendorBid(cData);