/**
 * Copyright (c) Patrik Forsberg <patrik.forsberg@coldmind.com> - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * February 2019
 */

import { Container }                    from "inversify";

let KernelTypes = {
	MessageHub      : Symbol("IMessageHub")
};

let Tag = {
	Handler         : "handler",
	Message         : "message",
	DataModule      : "data_module",
	DbModel         : "table_model",
	ProtocolManager : "protocol_manager"
};

let kernel = new Container();

/********************************************************************************************
 * ColdmindServerCore Kernel
 ***/
kernel.bind<IZynService>          ("IZynService").to(ServerService);
kernel.bind<IMessageHub>          ("IMessageHub").to(MessageHub).inSingletonScope();

//
// Bind Network Protocol Managers
//
// Socket.IO
kernel.bind<INetworkConnector>("INetworkConnector")
	.to(SocketIONetworkConnector).inSingletonScope()
	.whenTargetTagged(Tag.Handler, Tag.ApiController);

// Standard WebSocket
kernel.bind<INetworkConnector>("INetworkConnector")
	.to(WebSocketNetworkConnector).inSingletonScope()
	.whenTargetTagged(Tag.Handler, Tag.ApiController);



export { kernel, KernelTypes, Tag };
